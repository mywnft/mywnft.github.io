{"version":3,"sources":["config/config.js","hooks/use-input.hook.js","utils/myworld.utils.js","utils/GalleryData.class.js","reducer/userMyArtReducer.js","components/Spinner.js","components/TxDetails.js","providers/TxProvider.js","reducer/defaultReducer.js","components/Header.js","providers/AuthProvider.js","hooks/use-current-user.hook.js","providers/UserProvider.js","hooks/use-collection.hook.js","flow/check-collection.script.js","flow/create-collection.tx.js","flow/delete-collection.tx.js","hooks/use-myw.hook.js","flow/get-myw-balance.script.js","flow/create-myw-vault.tx.js","hooks/use-gallery.hook.js","hooks/use-user-mywarts.hook.js","flow/list-user-myarts.script.js","flow/purchase-mywart.tx.js","flow/put-myart-for-sale.tx.js","flow/mint-mywart.tx.js","components/MyArtCard.js","components/MyArtForm.js","components/MyArtList.js","components/GalleryCard.js","components/SaleCollection.js","config/routes.config.js","pages/Home.page.js","pages/Gallery.page.js","pages/Collection.page.js","pages/Artists.page.js","components/Navbar.js","providers/Providers.comp.js","pages/NotFound.page.js","components/Routes.comp.js","components/AccountDetails.js","App.js","index.js"],"names":["config","process","REACT_APP_ACCESS_NODE","REACT_APP_WALLET_DISCOVERY","REACT_APP_FT_CONTRACT","REACT_APP_NFT_CONTRACT","REACT_APP_FUSD_CONTRACT","REACT_APP_MYW_CONTRACT","REACT_APP_MYWART_CONTRACT","REACT_APP_MYWMARKET_CONTRACT","useInput","initialValue","useState","value","setValue","reset","bind","onChange","event","target","http","axios","create","baseURL","headers","checkMyWArt","Validator","compile","name","type","min","max","price","positive","integer","description","uri","messages","required","url","GalleryData","get","id","data","post","delete","userMyArtReducer","state","action","loading","error","payload","Error","Spinner","className","TxDetails","txContext","React","createContext","TxProvider","children","txs","setTxs","setLoading","useEffect","getLocalTxs","a","txString","window","localStorage","getItem","length","localTxs","split","runningTxs","index","getTxStatus","t","status","tx","subscribe","s","updateTxStatus","push","setItem","toString","map","txID","find","oldTxs","filter","updatedTx","removeTx","newTxs","send","getTransactionStatus","then","decode","Provider","addTx","transaction","prev","useTxs","useContext","defaultReducer","Header","title","subtitle","src","width","alt","AuthContext","AuthProvider","user","setUser","tools","logIn","fcl","logOut","cancel","useCurrentUser","loggedIn","style","display","onClick","useAuth","UserContext","UserProvider","collection","setCollection","addr","query","cadence","args","arg","Address","res","console","log","checkCollection","createCollection","mutate","limit","onceSealed","deleteCollection","useCollection","useReducer","dispatch","getMyWBalance","response","createMyWVault","useMyW","balance","fetchGallery","getAll","catch","e","err","useGallery","saleItems","queryMyWArtMintFee","fetchMyArts","address","myWArts","hasOwnProperty","purchaseMyWArt","myWArt","alert","seller_address","artId","parseInt","sellerAddress","UInt64","putForSale","want_price","wantPrice","parseFloat","toFixed","UFix64","mintMyWArt","fixed_price","minter","String","testScript","useUserMyWArts","useMyarts","useUser","MyArtCard","myart","store","owned","some","d","slice","bindPrice","seller_name","bindArtist","sell","setSell","step","MyArtForm","bindName","resetName","resetPrice","bindDescription","resetDescription","setUri","mintMyWArtFee","setMintMyWArtFee","params","endpoint","REACT_APP_IPFS_END_POINT","token","REACT_APP_IPFS_API_KEY","ipfspath","REACT_APP_IPFS_PATH","setIpfsUri","ipfsUri","handleSubmit","preventDefault","msg","confirm","forEach","message","MyArtList","myarts","i","SellButton","SaleCollection","ROUTES","path","component","history","useHistory","nav","NAV_ROUTES","r","Navbar","mobileMenu","setMobileMenu","NavItem","route","item","Providers","NotFound","Routes","renderRoutes","routes","exact","Wallet","color","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9966b71c.chunk.js","sourcesContent":["import { config } from \"@onflow/fcl\"\r\n\r\nconfig({\r\n  \"accessNode.api\": process.env.REACT_APP_ACCESS_NODE,\r\n  \"discovery.wallet\": process.env.REACT_APP_WALLET_DISCOVERY,\r\n  \"0xFungibleTokenContract\": process.env.REACT_APP_FT_CONTRACT,\r\n  \"0xNonFungibleTokenContract\": process.env.REACT_APP_NFT_CONTRACT,\r\n  \"0xFUSDContract\": process.env.REACT_APP_FUSD_CONTRACT,\r\n  \"0xMyWContract\": process.env.REACT_APP_MYW_CONTRACT,\r\n  \"0xMyWArtContract\": process.env.REACT_APP_MYWART_CONTRACT,\r\n  \"0xMyWMarketContract\": process.env.REACT_APP_MYWMARKET_CONTRACT\r\n})","import { useState } from \"react\";\r\n\r\nexport const useInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(\"\"),\r\n    bind: {\r\n      value,\r\n      onChange: event => {\r\n        setValue(event.target.value);\r\n      }\r\n    }\r\n  };\r\n};","import axios from \"axios\";\r\nimport Validator from 'fastest-validator'\r\n\r\nconst http = axios.create({\r\n  baseURL: \"http://very:5000/api/v1\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});\r\n\r\nconst v = new Validator();\r\n\r\nconst schemaMyWArt = {\r\n\r\n    name: {type: \"string\", min: 3, max: 255},\r\n    price: { type: \"number\", positive: true, integer: false },\r\n    description: { type: \"string\", min: 3, max: 255 },\r\n    uri: {\r\n        type: \"url\",\r\n        messages: {\r\n            required: \"An artwork must be uploaded\",\r\n            url: \"Url is not in correct format\"\r\n\r\n        }\r\n    }\r\n\r\n}\r\nconst checkMyWArt = v.compile(schemaMyWArt)\r\n\r\n\r\nexport {http, checkMyWArt };\r\n\r\n","import { http } from \"./myworld.utils\";\r\n\r\nclass GalleryDataClass {\r\n  \r\n  getAll() {\r\n    return http.get(\"gallery/\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`gallery/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"gallery/\", data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`gallery/${id}`);\r\n  }\r\n\r\n}\r\n\r\nconst GalleryData = new GalleryDataClass();\r\n\r\nexport default GalleryData;\r\n","export const userMyArtReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'PROCESSING':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false\r\n      }\r\n    case 'SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        data: action.payload\r\n      }\r\n    case 'ADD':\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.payload]\r\n      }\r\n    case 'ERROR':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      }\r\n    default:\r\n      throw new Error()\r\n  }\r\n}","import React from 'react'\r\nimport './Spinner.css'\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Spinner from '../components/Spinner'\r\nimport './TxDetails.css'\r\n\r\nexport default function TxDetails({ id }) {\r\n  return (\r\n    <div className=\"tx__wrapper\">\r\n      <div className=\"tx__loader\">\r\n        <Spinner />\r\n      </div>\r\n      <div className=\"tx__content\">\r\n        <p>Tx: {id}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { send, getTransactionStatus, decode, tx } from '@onflow/fcl'\r\n\r\nimport TxDetails from '../components/TxDetails'\r\nimport Spinner from '../components/Spinner'\r\n\r\nconst txContext = React.createContext()\r\n\r\nexport default function TxProvider({ children }) {\r\n  const [txs, setTxs] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    getLocalTxs()\r\n    //eslint-disable-next-line\r\n  }, [])\r\n\r\n  const renderTxs = () => {\r\n    return (\r\n      <div className='txs__list'>\r\n        {txs.map(tx => <TxDetails id={tx?.id} key={tx?.id} />)}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const getLocalTxs = async () => {\r\n    const txString = window.localStorage.getItem('txs')\r\n\r\n    if (!txString || txString.length === 0) {\r\n      setLoading(false)\r\n      return\r\n    }\r\n\r\n    const localTxs = txString?.split(\",\")\r\n    let runningTxs = []\r\n\r\n    for (let index = 0; index < localTxs.length; index++) {\r\n      const id = localTxs[index];\r\n      const t = await getTxStatus(id)\r\n      if (t?.status === 4) {\r\n        continue\r\n      }\r\n      tx(id).subscribe(s => updateTxStatus(s?.status, id))\r\n      runningTxs.push(id)\r\n    }\r\n\r\n    localStorage.setItem('txs', runningTxs.toString())\r\n    setTxs(runningTxs.map(t => ({ id: t })))\r\n    setLoading(false)\r\n  }\r\n\r\n  const addTx = (txID) => {\r\n    let transaction = { id: txID }\r\n    setTxs(prev => [...prev, transaction])\r\n    tx(txID).subscribe(s => updateTxStatus(s?.status, transaction?.id))\r\n    window.localStorage.setItem('txs', [...txs, transaction?.id].toString())\r\n  }\r\n\r\n  const updateTxStatus = (status, txID) => {\r\n    if (status === 4) {\r\n      removeTx(txID)\r\n      return\r\n    }\r\n    let tx = txs.find(t => t.id === txID)\r\n    let oldTxs = txs.filter(t => t.id !== txID)\r\n    if (!tx) return\r\n    let updatedTx = { ...tx, status }\r\n    setTxs([...oldTxs, updatedTx])\r\n  }\r\n\r\n  const removeTx = (txID) => {\r\n    let newTxs = txs.filter(t => t.id !== txID)\r\n    setTxs(newTxs)\r\n  }\r\n\r\n  const getTxStatus = async (txID) => {\r\n    const status = await send([\r\n      getTransactionStatus(txID),\r\n    ])\r\n      .then(decode);\r\n    return status\r\n  }\r\n\r\n  if (loading) return <Spinner />\r\n\r\n  return (\r\n    <txContext.Provider value={{\r\n      runningTxs: txs.length !== 0,\r\n      addTx,\r\n    }}>\r\n      {renderTxs()}\r\n      {children}\r\n    </txContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useTxs() {\r\n  return useContext(txContext)\r\n}","export const defaultReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'PROCESSING':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false\r\n      }\r\n    case 'SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        data: action.payload\r\n      }\r\n    case 'ERROR':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      }\r\n    default:\r\n      throw new Error()\r\n  }\r\n}","import React from 'react'\r\nexport default function Header({ title, subtitle }) {\r\n  return (\r\n    <>\r\n      <img src={`${process.env.PUBLIC_URL}/assets/MyWorld.png`} width=\"200px\" alt=\"MyWorld\" />\r\n      <h1 className=\"app__title\">{title}</h1>\r\n      <h3 className=\"app__subtitle\">{subtitle}</h3>\r\n    </>\r\n    \r\n  )\r\n}\r\n","import React, { createContext, useContext } from 'react'\r\n\r\nimport useCurrentUser from '../hooks/use-current-user.hook'\r\nimport Header from '../components/Header'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport default function AuthProvider({ children }) {\r\n  const [user, loggedIn, tools] = useCurrentUser()\r\n\r\n  if (!user || !loggedIn) return (\r\n    <>\r\n      <Header\r\n        title={<><span className=\"highlight\">My</span>World</>}\r\n        subtitle={<>An NFT gallery of <span className=\"highlight\">arts and music</span> for autism community</>}\r\n      />\r\n      <div\r\n        style={{ display: \"inline-block\" }}\r\n        className=\"btn btn-bg rounded\"\r\n        onClick={() => tools?.logIn()}>\r\n        Sign In to start\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      user,\r\n      loggedIn,\r\n      ...tools\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext)\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport * as fcl from \"@onflow/fcl\"\r\nexport default function useCurrentUser() {\r\n  const [user, setUser] = useState()\r\n\r\n  const tools = {\r\n    logIn: fcl.authenticate,\r\n    logOut: fcl.unauthenticate,\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    let cancel = false\r\n    if (!cancel) {\r\n      fcl.currentUser().subscribe(setUser)\r\n    }\r\n    return () => {\r\n      cancel = true\r\n    }\r\n  }, [])\r\n\r\n  // return [user, user?.addr != null, tools]\r\n  return [user, true , tools]\r\n}\r\n","import React, { createContext, useContext } from 'react'\r\n\r\nimport useUserMyWArts from '../hooks/use-user-mywarts.hook'\r\nimport useGallery from '../hooks/use-gallery.hook'\r\nimport useCollection from '../hooks/use-collection.hook'\r\nimport useMyW from '../hooks/use-myw.hook'\r\nimport { useAuth } from './AuthProvider'\r\n\r\nconst UserContext = createContext()\r\n\r\nexport default function UserProvider({ children }) {\r\n  const { user } = useAuth()\r\n  const { collection, createCollection, deleteCollection } = useCollection(user)\r\n  const { data: balance, createMyWVault, getMyWBalance } = useMyW(user)\r\n  const { data: saleItems, fetchGallery } = useGallery()\r\n  const { data: useMyarts, putForSale, purchaseMyWArt, mintMyWArt, queryMyWArtMintFee, testScript } = \r\n    useUserMyWArts(user, collection, getMyWBalance, fetchGallery)\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        saleItems,\r\n        useMyarts,\r\n        putForSale,\r\n        purchaseMyWArt,\r\n        mintMyWArt,\r\n        queryMyWArtMintFee,\r\n        testScript,\r\n        collection,\r\n        createCollection,\r\n        deleteCollection,\r\n        balance,\r\n        createMyWVault,\r\n        getMyWBalance,\r\n      }}>\r\n\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useUser = () => {\r\n  return useContext(UserContext)\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { mutate, query, tx } from '@onflow/fcl'\r\n\r\nimport { CHECK_COLLECTION } from '../flow/check-collection.script'\r\nimport { DELETE_COLLECTION } from '../flow/delete-collection.tx'\r\nimport { CREATE_COLLECTION } from '../flow/create-collection.tx'\r\nimport { useTxs } from '../providers/TxProvider'\r\n\r\nexport default function useCollection(user) {\r\n  const [loading, setLoading] = useState(true)\r\n  const [collection, setCollection] = useState(null)\r\n  const { addTx } = useTxs()\r\n\r\n  useEffect(() => {\r\n    if (!user?.addr) return\r\n    const checkCollection = async () => {\r\n      \r\n      try {\r\n\r\n        let res = await query({\r\n          cadence: CHECK_COLLECTION,\r\n          args: (arg, t) => [arg(user?.addr, t.Address)] /* this is where signers are passed as an argument */\r\n        })\r\n\r\n        setCollection(res)\r\n        setLoading(false)\r\n\r\n      } catch (err) {\r\n        console.log(err)\r\n        setLoading(false)\r\n      }\r\n\r\n    }\r\n    checkCollection()\r\n    //eslint-disable-next-line\r\n  }, [])\r\n\r\n  const createCollection = async () => {\r\n    let res = await mutate({\r\n      cadence: CREATE_COLLECTION,\r\n      limit: 55\r\n    })\r\n    addTx(res)\r\n    await tx(res).onceSealed()\r\n    setCollection(true)\r\n  }\r\n\r\n  const deleteCollection = async () => {\r\n    try {\r\n      let res = await mutate({\r\n        cadence: DELETE_COLLECTION,\r\n        limit: 75\r\n      })\r\n      addTx(res)\r\n      await tx(res).onceSealed()\r\n      setCollection(false)\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return {\r\n    loading,\r\n    collection,\r\n    createCollection,\r\n    deleteCollection\r\n  }\r\n}\r\n","export const CHECK_COLLECTION = `\r\nimport MyWArt from 0xMyWArtContract\r\nimport NonFungibleToken from 0xNonFungibleTokenContract\r\n\r\npub fun main(addr: Address): Bool {\r\n  let ref = getAccount(addr).getCapability<&{NonFungibleToken.CollectionPublic}>(MyWArt.MyWArtCollectionPublicPath).check()\r\n  return ref\r\n}\r\n`","export const CREATE_COLLECTION = `\r\n  import MyW from 0xMyWContract\r\n  import MyWMarket from 0xMyWMarketContract\r\n  import MyWArt from 0xMyWArtContract\r\n  import NonFungibleToken from 0xNonFungibleTokenContract  \r\n\r\n  transaction {\r\n\r\n    prepare(acct: AuthAccount) {\r\n\r\n      if acct.borrow<&MyWArt.Collection>(from: MyWArt.MyWArtCollectionStoragePath) == nil {\r\n\r\n        // Put a new Collection in storage\r\n        acct.save<@MyWArt.Collection>(\r\n            <- MyWArt.createEmptyCollection(), \r\n            to: MyWArt.MyWArtCollectionStoragePath\r\n        )\r\n\r\n        // Create a public capability for the Collection\r\n        acct.link<&{NonFungibleToken.CollectionPublic}>(\r\n            MyWArt.MyWArtCollectionPublicPath, \r\n            target: MyWArt.MyWArtCollectionStoragePath\r\n        )\r\n\r\n        // Create a public Data capability for the Collection\r\n        acct.link<&{MyWArt.Data}>(MyWArt.MyWArtDataPublicPath, target: MyWArt.MyWArtCollectionStoragePath)\r\n      }\r\n\r\n      if acct.borrow<&MyWMarket.SaleCollection>(from: MyWMarket.MyWSaleCollectionPath) == nil {\r\n\r\n        \r\n        // Where to deposit sale revenue to\r\n        let ownerCapability = acct\r\n            .getCapability(MyW.MyWVaultReceiver)\r\n\r\n        // Where to deposit sale cut to\r\n        let broker = getAccount(MyWMarket.DefaultBeneficiaryAddress)\r\n        let beneficiaryCapability = broker\r\n            .getCapability(MyW.MyWVaultReceiver)\r\n\r\n        // Let's stick with default cut\r\n        let cutPercentage = MyWMarket.DefaultCutPercentage\r\n\r\n\r\n        let saleCollection <- MyWMarket.createEmptySaleCollection(\r\n            ownerCapability: ownerCapability,\r\n            beneficiaryCapability: beneficiaryCapability,\r\n            cutPercentage: cutPercentage\r\n        )\r\n\r\n        // Put a new SaleCollection in storage\r\n        acct.save<@MyWMarket.SaleCollection>(\r\n            <- saleCollection, \r\n            to: MyWMarket.MyWSaleCollectionPath\r\n        )\r\n\r\n        // Create a public capability for the SaleCollection\r\n        acct.link<&{MyWMarket.SalePublic}>(\r\n            MyWMarket.MyWSalePublicPath, \r\n            target: MyWMarket.MyWSaleCollectionPath\r\n        )\r\n\r\n      }\r\n\r\n    }\r\n \r\n  }\r\n`","export const DELETE_COLLECTION = `\r\n  import MyWArt from 0xMyWArtContract\r\n\r\n  transaction () {\r\n\r\n    let account: AuthAccount\r\n\r\n    prepare(acct: AuthAccount) { \r\n\r\n      let collectionRef = acct.borrow<&MyWArt.Collection>(from: MyWArt.MyWArtCollectionStoragePath)\r\n        ?? panic(\"Could not borrow collection reference\")\r\n      self.account = acct\r\n    }\r\n\r\n    execute {\r\n\r\n      let collection <- self.account.load<@MyWArt.Collection>(from: MyWArt.MyWArtCollectionStoragePath)\r\n        ?? panic(\"Could not borrow collection reference\")\r\n\r\n      destroy collection\r\n        \r\n      self.account.unlink(MyWArt.MyWArtCollectionPublicPath)\r\n\r\n      self.account.unlink(MyWArt.MyWArtDataPublicPath)\r\n\r\n    }\r\n\r\n  }  \r\n`","import { useEffect, useReducer } from 'react'\r\nimport { CREATE_MYW_VAULT } from '../flow/create-myw-vault.tx';\r\nimport { GET_MYW_BALANCE } from '../flow/get-myw-balance.script';\r\nimport { defaultReducer } from '../reducer/defaultReducer'\r\nimport { query, mutate, tx } from '@onflow/fcl'\r\nimport { useTxs } from '../providers/TxProvider'\r\n\r\nexport default function useMyW(user) {\r\n  const [state, dispatch] = useReducer(defaultReducer, {\r\n    loading: true,\r\n    error: false,\r\n    data: null\r\n  }) /* This object use defaultReducer */\r\n  const { addTx } = useTxs()\r\n\r\n  useEffect(() => {\r\n    getMyWBalance();\r\n    //eslint-disable-next-line \r\n  }, [])\r\n\r\n  const getMyWBalance = async () => {\r\n    dispatch({ type: 'PROCESSING' })\r\n\r\n    try {\r\n      let response = await query({\r\n        cadence: GET_MYW_BALANCE,\r\n        args: (arg, t) => [\r\n          arg(user?.addr, t.Address)\r\n        ]\r\n      })\r\n      dispatch({ type: 'SUCCESS', payload: response })\r\n    } catch (err) {\r\n      dispatch({ type: 'ERROR' })\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const createMyWVault = async () => {\r\n    dispatch({ type: 'PROCESSING' })\r\n    try {\r\n      let transaction = await mutate({\r\n        cadence: CREATE_MYW_VAULT,\r\n        limit: 100\r\n      })\r\n      addTx(transaction)\r\n      await tx(transaction).onceSealed()\r\n      dispatch({ type: 'SUCCESS', })\r\n      getMyWBalance()\r\n    } catch (err) {\r\n      console.log(err)\r\n      dispatch({ type: 'ERROR' })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    createMyWVault,\r\n    getMyWBalance\r\n  }\r\n}\r\n","export const GET_MYW_BALANCE = `\r\n  import FungibleToken from 0xFungibleTokenContract\r\n  import MyW from 0xMyWContract\r\n\r\n  pub fun main(address: Address): UFix64? {\r\n    let account = getAccount(address)\r\n    if let vaultRef = account.getCapability(MyW.MyWVaultBalance).borrow<&{FungibleToken.Balance}>() {\r\n      return vaultRef.balance\r\n    } \r\n    return nil\r\n  }\r\n`","export const CREATE_MYW_VAULT = `\r\n  import FungibleToken from 0xFungibleTokenContract\r\n  import MyW from 0xMyWContract\r\n\r\n  transaction {\r\n    prepare(signer: AuthAccount) {\r\n      if(signer.borrow<&MyW.Vault>(from: MyW.MyWVaultStorage) != nil) {\r\n        return\r\n      }\r\n    \r\n      signer.save(<-MyW.createEmptyVault(), to: MyW.MyWVaultStorage)\r\n\r\n      signer.link<&{FungibleToken.Receiver}>(\r\n        MyW.MyWVaultReceiver,\r\n        target: MyW.MyWVaultStorage\r\n      )\r\n\r\n      signer.link<&{FungibleToken.Balance}>(\r\n        MyW.MyWVaultBalance,\r\n        target: MyW.MyWVaultStorage\r\n      )\r\n    }\r\n  }\r\n`","import { useEffect, useReducer } from 'react'\r\nimport GalleryData from '../utils/GalleryData.class'\r\n// import MyArtClass from '../utils/MyArtClass'\r\nimport { defaultReducer } from '../reducer/defaultReducer'\r\n\r\nexport default function useGallery() { /* Stateful function  to get methods and properties of user */\r\n\r\n  const [state, dispatch] = useReducer(defaultReducer, {\r\n    loading: false,\r\n    error: false,\r\n    data: [] // data will be renamed \r\n  })\r\n\r\n  const fetchGallery = async () => {\r\n    dispatch({ type: 'PROCESSING' })\r\n    try {\r\n      // here  \r\n      GalleryData.getAll()\r\n        .then(res => {\r\n          dispatch({ type: 'SUCCESS', payload: res.data });\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n          dispatch({ type: 'ERROR' });\r\n        })\r\n\r\n      // let myarts = Object.keys(res).map(key => {\r\n      //   return new MyArtClass(key, res[key].name, res[key].price, res[key].uri) // TODO: should be wantPrice, remove bellow\r\n      // })\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({ type: 'ERROR' })\r\n    }\r\n  }\r\n  \r\n  useEffect(() => { \r\n \r\n    fetchGallery()\r\n    //eslint-disable-next-line\r\n\r\n  }, [])\r\n\r\n  return {\r\n    ...state,\r\n    fetchGallery\r\n  }\r\n\r\n}\r\n","import { useEffect, useReducer } from 'react'\r\nimport { mutate, query, tx } from '@onflow/fcl'\r\nimport GalleryData from '../utils/GalleryData.class'\r\n\r\nimport { LIST_USER_MYARTS as LIST_USER_MYWARTS } from '../flow/list-user-myarts.script'\r\nimport { PUT_MYART_FOR_SALE } from '../flow/put-myart-for-sale.tx'\r\nimport { PURCHASE_MYWART } from '../flow/purchase-mywart.tx'\r\nimport { MINT_MYWART } from '../flow/mint-mywart.tx'\r\nimport { userMyArtReducer } from '../reducer/userMyArtReducer'\r\nimport { useTxs } from '../providers/TxProvider'\r\n\r\nexport default function useUserMyWArts(user, collection, getMyWBalance, fetchGallery) { \r\n  /* Stateful function  to get methods and properties of user */\r\n\r\n   const [state, dispatch] = useReducer(userMyArtReducer, {\r\n    loading: false,\r\n    error: false,\r\n    data: [] // data will be renamed to useUserMyArts\r\n  })\r\n  const { addTx, runningTxs } = useTxs()\r\n\r\n  const queryMyWArtMintFee = async () => {\r\n    const script =`\r\n      import MyWArt from 0xMyWArtContract\r\n      pub fun main(): UFix64 {\r\n        return MyWArt.DefaultMintFee\r\n      }\r\n    `\r\n    let res = await query({\r\n      cadence: script\r\n    })\r\n\r\n    return res;\r\n\r\n  }\r\n\r\n  const fetchMyArts = async () => {\r\n\r\n    console.log(user);\r\n\r\n    // Dispatch is use to update statful object\r\n    dispatch({ type: 'PROCESSING' }) \r\n\r\n    try {\r\n\r\n      const address = user.addr\r\n\r\n      const data = await query({\r\n        \r\n        cadence: LIST_USER_MYWARTS,\r\n        limit: 55,\r\n        args: (arg, t) => [arg(address, t.Address)]\r\n        \r\n      })\r\n\r\n      console.log(data)\r\n\r\n      const myWArts = []\r\n      for (var id in data) if (data.hasOwnProperty(id)) {\r\n        data[id].id = id\r\n        myWArts.push(data[id])\r\n      }\r\n\r\n      dispatch({ type: 'SUCCESS', payload: myWArts })\r\n\r\n    } catch (err) {\r\n\r\n      console.log(err)\r\n      dispatch({ type: 'ERROR' })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => { /* useEffect is use as a side effect after render or update of a component. It is used in replacement for DidMount and DidUpdate */\r\n    \r\n    fetchMyArts();\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const purchaseMyWArt = async (myWArt) => { //TODO: Strong type here\r\n\r\n    // TODO: Enable collection error?\r\n\r\n    if (runningTxs) {\r\n      alert(\"Transactions are still running. Please wait for them to finish first.\")\r\n      return\r\n    }\r\n    try  {\r\n\r\n      const { id, seller_address } = myWArt\r\n      const artId = parseInt(id)\r\n      const sellerAddress = seller_address\r\n      let res = await mutate({\r\n        cadence: PURCHASE_MYWART,\r\n        limit: 200,\r\n        args: (arg, t) => [\r\n          arg(artId, t.UInt64),\r\n          arg(sellerAddress, t.Address)\r\n        ]\r\n      })\r\n\r\n      GalleryData.delete(artId)\r\n        .then( () => {\r\n          fetchMyArts()\r\n          fetchGallery()\r\n        })\r\n        .catch( e => {\r\n          console.log(e);\r\n        })\r\n      \r\n      addTx(res)\r\n      await tx(res).onceSealed()\r\n      await getMyWBalance()\r\n\r\n    }\r\n    catch (error) {\r\n      console.log(error)\r\n    }\r\n  \r\n  }\r\n\r\n  const putForSale = async (data) => {\r\n    if (runningTxs) {\r\n      alert(\"Transactions are still running. Please wait for them to finish first.\")\r\n      return\r\n    }\r\n    try  {\r\n\r\n      const { id, want_price } = data\r\n      const wantPrice = parseFloat(want_price).toFixed(8)\r\n      const artId = parseInt(id)\r\n      let res = await mutate({\r\n        cadence: PUT_MYART_FOR_SALE,\r\n        limit: 55,\r\n        args: (arg, t) => [\r\n          arg(artId, t.UInt64), \r\n          arg(wantPrice, t.UFix64)\r\n        ]\r\n      })\r\n\r\n      GalleryData.create(data)\r\n        .then( () => {\r\n          fetchMyArts()\r\n        })\r\n        .catch( e => {\r\n          console.log(e);\r\n        })\r\n      \r\n      addTx(res)\r\n      await tx(res).onceSealed()\r\n      await getMyWBalance()\r\n\r\n      // TODO: Just remove one art and add that to gallery\r\n\r\n      fetchGallery()\r\n\r\n    }\r\n    catch (error) {\r\n      console.log(error)\r\n    }\r\n  \r\n  }\r\n  const mintMyWArt = async (data) => {  \r\n\r\n    //TODO: Change to strong type\r\n    if (!collection) {\r\n      alert(\"You need to enable the collection first. Go to the tab Collection\")\r\n      return\r\n    }\r\n    if (runningTxs) {\r\n      alert(\"Transactions are still running. Please wait for them to finish first.\")\r\n      return\r\n    }\r\n\r\n    const {name, price, uri, description } = data\r\n\r\n    const fixed_price = parseFloat(price).toFixed(8);\r\n\r\n    const minter = process.env.REACT_APP_MYWART_CONTRACT\r\n\r\n    try {\r\n\r\n      let res = await mutate({\r\n\r\n        cadence: MINT_MYWART,\r\n        limit: 100,\r\n        args: (arg, t) => [\r\n          arg(name, t.String), \r\n          arg(fixed_price, t.UFix64),\r\n          arg(uri, t.String),\r\n          arg(description, t.String),\r\n          arg(minter, t.Address),\r\n        ]\r\n        \r\n      })\r\n\r\n      addTx(res)\r\n\r\n      await tx(res).onceSealed()\r\n      await getMyWBalance()\r\n      await fetchMyArts()\r\n\r\n    }\r\n    catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }\r\n\r\n  const testScript = async () => {\r\n    const script =`\r\n      pub fun main(): AnyStruct {\r\n        return true\r\n      }\r\n    `\r\n    let res = await query({\r\n      cadence: script\r\n    })\r\n    console.log(res)\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    putForSale,\r\n    mintMyWArt,\r\n    testScript,\r\n    purchaseMyWArt,\r\n    queryMyWArtMintFee\r\n  }\r\n}\r\n","export const LIST_USER_MYARTS = `\r\n  import MyWArt from 0xMyWArtContract\r\n\r\n  pub fun main(address: Address):  {UInt64: MyWArt.MyWArtData} {\r\n\r\n    let account = getAccount(address)\r\n    \r\n    let dataRef = account\r\n      .getCapability<&{MyWArt.Data}>(MyWArt.MyWArtDataPublicPath).borrow() ??\r\n        panic(\"Could not borrow a reference to NFT collection\")\r\n\r\n    return dataRef.getDataCollection()\r\n\r\n  }\r\n`","export const PURCHASE_MYWART = `\r\nimport MyWArt from 0xMyWArtContract\r\nimport MyW from 0xMyWContract\r\nimport NonFungibleToken from 0xNonFungibleTokenContract\r\nimport MyWMarket from 0xMyWMarketContract\r\n\r\ntransaction(artId: UInt64, sellerAddress: Address) {\r\n\r\n    let collectionRef: &{NonFungibleToken.CollectionPublic}\r\n    let saleRef: &{MyWMarket.SalePublic}\r\n    let vaultRef: &MyW.Vault\r\n    let want_price: UFix64\r\n\r\n    prepare(acct: AuthAccount) {\r\n\r\n        // Get collection receiver capability\r\n        self.collectionRef = acct\r\n            .getCapability(MyWArt.MyWArtCollectionPublicPath)\r\n            .borrow<&{NonFungibleToken.CollectionPublic}>()\r\n            ?? panic(\" Could not borrow reference to MyWArt receiver\")\r\n        \r\n        let sellerAccount = getAccount(sellerAddress) \r\n        \r\n        // Get Sale Collection  capability\r\n        self.saleRef = sellerAccount\r\n            .getCapability(MyWMarket.MyWSalePublicPath)\r\n            .borrow<&{MyWMarket.SalePublic}>()\r\n            ?? panic(\" Could not borrow reference to MyWArt sale collection\")\r\n\r\n        \r\n        // Get vault\r\n        self.vaultRef = acct.borrow<&MyW.Vault>(from: MyW.MyWVaultStorage)\r\n            ?? panic(\" Could not borrow reference to MyW main vault\")\r\n\r\n        // Check balance\r\n        self.want_price = self.saleRef.getPrice(tokenID: artId)!\r\n        \r\n        log(\"*************************\")\r\n        log(self.vaultRef.balance)\r\n\r\n        assert(self.vaultRef.balance >= self.want_price, message: \"Not enought MyW balance to purcase the art\")\r\n\r\n    }\r\n\r\n    execute {\r\n\r\n        let vault <- self.vaultRef.withdraw(amount: self.want_price)\r\n\r\n        let nft <- self.saleRef.purchase(tokenID: artId, buyTokens: <- vault)\r\n\r\n        self.collectionRef.deposit(token: <- nft)\r\n\r\n    }\r\n\r\n}\r\n\r\n`","export const PUT_MYART_FOR_SALE = `\r\nimport MyWArt from 0xMyWArtContract\r\nimport NonFungibleToken from 0xNonFungibleTokenContract\r\nimport MyWMarket from 0xMyWMarketContract\r\n\r\ntransaction(artId: UInt64, wantPrice: UFix64) {\r\n\r\n    let collectionRef: &MyWArt.Collection\r\n    let saleRef: &MyWMarket.SaleCollection\r\n\r\n    prepare(acct: AuthAccount) {\r\n\r\n        self.collectionRef = acct.borrow<&MyWArt.Collection>(\r\n            from: MyWArt.MyWArtCollectionStoragePath\r\n        ) \r\n            ?? panic(\" Could not borrow reference to MyWArt private collection\")\r\n        \r\n        self.saleRef = acct.borrow<&MyWMarket.SaleCollection>(\r\n            from: MyWMarket.MyWSaleCollectionPath\r\n        )\r\n            ?? panic(\" Could not borrow reference to MyWArt sale collection\")\r\n\r\n    }\r\n\r\n    execute {\r\n\r\n        let nft <- self.collectionRef\r\n            .withdraw(withdrawID: artId) as! @MyWArt.NFT\r\n        \r\n        self.saleRef.listForSale(\r\n            token: <- nft,\r\n            price: wantPrice\r\n        )\r\n\r\n    }\r\n\r\n}\r\n`","export const MINT_MYWART = `\r\nimport MyWArt from 0xMyWArtContract\r\nimport MyW from 0xMyWContract\r\nimport NonFungibleToken from 0xNonFungibleTokenContract\r\n\r\n// This transaction is what an admin would use to mint a single NFT\r\n// and deposit it in a user's collection\r\n\r\n// AuthAccount must have enough MyW token balance to pay for minting fee\r\n\r\ntransaction(name: String, price: UFix64, uri: String, description: String, minter: Address) { \r\n    // local variable for the admin reference\r\n    let minterRef: &{MyWArt.MinterProxyPublic}\r\n    let collectionRef: &{NonFungibleToken.CollectionPublic}\r\n    let myWRef: &MyW.Vault\r\n\r\n    prepare(acct: AuthAccount) {\r\n\r\n        let admin = getAccount(minter)\r\n\r\n        self.minterRef = admin\r\n            .getCapability(MyWArt.MinterProxyPublicPath)\r\n            .borrow<&{MyWArt.MinterProxyPublic}>() ??\r\n                panic(\"Could not borrow reference to minter\")\r\n\r\n        self.collectionRef = acct\r\n            .getCapability(MyWArt.MyWArtCollectionPublicPath)\r\n            .borrow<&{NonFungibleToken.CollectionPublic}>() ??\r\n                panic(\"Could not borrow reference to collection public for receiving nft\")\r\n            \r\n        self.myWRef = acct.borrow<&MyW.Vault>(from: MyW.MyWVaultStorage) ??\r\n            panic(\"Could not borrow reference to MyW vault\")\r\n\r\n        assert(self.myWRef.balance >= MyWArt.DefaultMintFee, message: \"Could not mint NFT: MyW token balance is low\")    \r\n\r\n    }\r\n\r\n    execute {\r\n\r\n        let paymentVault <- self.myWRef.withdraw(amount: MyWArt.DefaultMintFee) as! @MyW.Vault\r\n\r\n        // Mint a new NFT\r\n        let data = MyWArt.MyWArtData(\r\n            name: name,\r\n            price: price,\r\n            uri: uri,\r\n            description: description\r\n        )\r\n\r\n        let nft <- self.minterRef.mintMyWArt(data: data, fee: <- paymentVault)\r\n          \r\n        self.collectionRef.deposit(token: <-nft)\r\n\r\n    }\r\n}\r\n`","import React, { useState } from 'react'\r\nimport { useInput } from '../hooks/use-input.hook'\r\nimport { useUser } from '../providers/UserProvider'\r\nimport { useAuth } from '../providers/AuthProvider'\r\nimport \"./MyArtCard.css\"\r\n\r\nexport default function MyArtCard({ myart, store }) {\r\n\r\n  const { useMyarts, putForSale } = useUser()\r\n\r\n  const { id, name, price, uri } = myart\r\n\r\n  const { user } = useAuth();\r\n\r\n  const owned = useMyarts.some(d => d?.id === myart?.id)\r\n\r\n  const { value: want_price, bind: bindPrice, reset: resetPrice } = useInput(price.slice(0, -6));\r\n\r\n  const { value: seller_name, bind: bindArtist, reset: resetArtist } = useInput(\"Anonymous\");\r\n\r\n  const [sell, setSell] = useState(false);\r\n\r\n  const clickShow = () => {\r\n\r\n    setSell(!sell);\r\n\r\n  }\r\n\r\n  const clickSell = () => {\r\n\r\n    myart.want_price = want_price;\r\n    myart.seller_name = seller_name;\r\n    myart.seller_address = user.addr;\r\n    \r\n    putForSale( myart );\r\n    \r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"myart-card__border\">\r\n      <div className={`myart-card__wrapper ${owned && store && \"faded\"}`} >\r\n        <img className=\"myart-card__image img-large\" src={uri} alt=\"Art\" />\r\n        <br />\r\n        <h3 className=\"myart-cart__title\">{name}</h3>\r\n        <p className=\"myart-card__info\"># {id}</p>\r\n      </div>\r\n\r\n      {/* Sell Button */}\r\n      <div\r\n        className=\"btn btn-bordered btn-light\">\r\n        <div onClick={() => clickShow()}>\r\n          <i className=\"ri-price-tag-3-fill btn-icon\"></i> {parseInt(price)} MyW\r\n        </div>\r\n        {sell &&\r\n          <>\r\n            <div className=\"myart__form__item \">\r\n              <label>Price</label>\r\n              <input type=\"number\" step=\".01\" {...bindPrice} />\r\n            </div>\r\n            <div className=\"myart__form__item \">\r\n              <label>Artist Name (optional)</label>\r\n              <input type=\"text\" {...bindArtist} />\r\n            </div>\r\n            <div className=\"btn upload__btn btn-bg rounded\" onClick={() => clickSell()}>Put for sale</div>\r\n          </>\r\n        }\r\n      </div>\r\n\r\n      <div className=\"collected\">Collected</div>\r\n    </div >\r\n\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport \"./MyArtForm.css\"\r\nimport { useInput } from '../hooks/use-input.hook'\r\nimport { useUser } from '../providers/UserProvider'\r\nimport { LazyIpfsImage } from 'lazy-ipfs-image'\r\nimport { useEffect } from 'react/cjs/react.development'\r\nimport { checkMyWArt } from '../utils/myworld.utils'\r\n\r\n\r\nexport default function MyArtForm() {\r\n    const { mintMyWArt, queryMyWArtMintFee } = useUser()\r\n    const { value: name, bind: bindName, reset: resetName } = useInput('');\r\n    const { value: price, bind: bindPrice, reset: resetPrice } = useInput('');\r\n    const { value: description, bind: bindDescription, reset: resetDescription } = useInput('');\r\n    const [uri, setUri] = useState(null)\r\n    const [mintMyWArtFee, setMintMyWArtFee] = useState(null);\r\n\r\n\r\n    const params = {\r\n        endpoint: process.env.REACT_APP_IPFS_END_POINT,\r\n        token: process.env.REACT_APP_IPFS_API_KEY,\r\n        ipfspath: process.env.REACT_APP_IPFS_PATH,\r\n        setIpfsUri: (ipfsUri) => setUri(ipfsUri)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        //TODO: move to use-user-mywarts.hook.js dispatch to reduce load\r\n        (async () => {\r\n            setMintMyWArtFee(await queryMyWArtMintFee());\r\n        })()\r\n        \r\n    //eslint-disable-next-line\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        let myWArt = {\r\n            name,\r\n            price,\r\n            uri,\r\n            description\r\n        }\r\n        // TODO: Remove! for testing only\r\n        myWArt = {\r\n            name: \"Test\",\r\n            price: 100.00,\r\n            uri: \"https://ipfs.io/ipfs/bafkreih6qup2zmio7nf4anbwrthztahg7rb7rb7mghw4iyg6nkg32gpn3e\",\r\n            description: \"Only for testing\"\r\n        }\r\n\r\n        //TODO: checking and error report should be moved to hook layer for more robustness\r\n        const msg = checkMyWArt( myWArt);\r\n\r\n        if (msg === true) {\r\n\r\n            // eslint-disable-next-line no-restricted-globals\r\n            if ( confirm(\r\n                `Minting myart: ` +\r\n                `\\n    name: ${myWArt.name},` +\r\n                `\\n    price: ${myWArt.price},` +\r\n                `\\n    uri: ${myWArt.uri},` +\r\n                `\\n    description: ${myWArt.description}` +\r\n                `\\nProceed?` ) ) \r\n            {\r\n                await mintMyWArt(myWArt) // TODO: txn failed should be reported with meaningful errors\r\n            }\r\n        }\r\n        else {\r\n            let err = 'Error:';\r\n            console.log(msg);\r\n            msg.forEach(e => {\r\n                err = `${err}\\n${e.message}`;\r\n            });\r\n            alert(err)\r\n        }\r\n\r\n        resetName()\r\n        resetPrice()\r\n        resetDescription()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"myart__form__border\">\r\n                <div className=\"myart-cart__title\">Mint Your Art</div>\r\n                <form className=\"myart__form\">\r\n                    <LazyIpfsImage {...params} />\r\n                    <div className=\"myart__form__item \">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" {...bindName} />\r\n                    </div>\r\n                    <div className=\"myart__form__item \">\r\n                        <label>Price</label>\r\n                        <input type=\"number\" step=\".01\" {...bindPrice} />\r\n                    </div>\r\n                    <div className=\"myart__form__item \">\r\n                        <label>Description</label>\r\n                        <input type=\"text\" {...bindDescription} />\r\n                    </div>\r\n                    {/* <input className=\"btn btn-bg rounded\" type=\"submit\" value=\"3. Submit\" /> */}\r\n                    <div className=\"btn upload__btn btn-bg rounded\" onClick={handleSubmit}>\r\n                        3. Submit\r\n                    </div>\r\n                    <div>\r\n                        * Mint Fee: { mintMyWArtFee ? mintMyWArtFee.slice(0, -6) : null }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nimport MyArtCard from './MyArtCard'\r\nimport './MyArtList.css'\r\nimport MyArtForm from './MyArtForm'\r\n\r\n\r\nexport default function MyArtList({ myarts }) {\r\n\r\n  return (\r\n    <div className=\"myart-list__wrapper\">\r\n      {myarts.map((myart, i) => (\r\n        <MyArtCard\r\n          key={i}\r\n          myart={myart}\r\n        />\r\n      ))\r\n      }\r\n      <MyArtForm />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useUser } from '../providers/UserProvider'\r\nimport \"./MyArtCard.css\"\r\n\r\nexport default function MyArtCard({ myWArt }) {\r\n  const { useMyarts, purchaseMyWArt } = useUser()\r\n  const { id, name, want_price, uri, description, seller_address, seller_name } = myWArt\r\n  const owned = useMyarts.some(d => d?.id === myWArt?.id)\r\n  //TODO: check owned for sale and allow user to withdraw\r\n\r\n  const SellButton = () => (\r\n    <div\r\n      onClick={() => purchaseMyWArt(myWArt)}\r\n      className=\"btn btn-bordered btn-light\">\r\n      <i className=\"ri-price-tag-3-fill btn-icon\"></i> {parseInt(want_price)} FUSD\r\n    </div>\r\n  )\r\n\r\n  return (\r\n\r\n    <div className=\"myart-card__border\">\r\n      <div className={`myart-card__wrapper ${owned && \"faded\"}`} >\r\n        <img className=\"myart-card__image img-large\" src={uri} alt=\"Art\" />\r\n        <br />\r\n        <h3 className=\"myart-cart__title\">{name}</h3>\r\n        <div className=\"myart-card__info\">ID: # {id}</div>\r\n        {description &&\r\n          <div className=\"myart-card__info\">Description {description}</div>\r\n        }\r\n        <div className=\"myart-card__info\">Seller: \r\n          {seller_name && <span>{seller_name } @ </span>}\r\n          {seller_address}\r\n        </div>\r\n        \r\n        <p className=\"myart-card__info\">ID: # {id}</p>\r\n      </div>\r\n      <SellButton />\r\n      {/* <div className=\"collected\">For Sale</div> */}\r\n    </div >\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport GalleryCard from './GalleryCard'\r\nimport './MyArtList.css'\r\n\r\nexport default function SaleCollection( {saleItems} ) {\r\n\r\n  return (\r\n    <div className=\"myart-list__wrapper\">\r\n      {saleItems.map((myWArt, i) => (\r\n        <GalleryCard\r\n          key = {i}\r\n          myWArt={myWArt}\r\n        />\r\n      ))\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n","import Collection from '../pages/Collection.page'\r\nimport Gallery from '../pages/Gallery.page'\r\nimport Artists from '../pages/Artists.page'\r\nimport Home from '../pages/Home.page'\r\n\r\nexport const ROUTES = [\r\n  { name: \"Home\", path: \"/\", component: Home, nav: true },\r\n  { name: \"Gallery\", path: \"/gallery\", component: Gallery, nav: true },\r\n  { name: \"Collection\", path: '/collection', component: Collection, nav: true },\r\n  { name: \"Artists\", path: '/artists', component: Artists, nav: true },\r\n\r\n]\r\n\r\nexport const NAV_ROUTES = ROUTES.filter(r => r.nav)","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Header from '../components/Header'\r\nimport \"./Home.page.css\"\r\n\r\nexport default function Home() {\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title={<><span className=\"highlight\">My</span>World</>}\r\n        subtitle={<>An NFT gallery of <span className=\"highlight\">arts and music</span> for autism community</>}\r\n\r\n      >\r\n      </Header>\r\n      <img className=\"header-image\"\r\n        alt=\"Header\"\r\n        onClick={() => history.push(\"/packs\")}\r\n        src={`${process.env.PUBLIC_URL}/assets/PinWheel.png`}\r\n      />\r\n      \r\n\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport SaleCollection from '../components/SaleCollection'\r\nimport { useUser } from '../providers/UserProvider'\r\nimport Header from '../components/Header'\r\n\r\nexport default function Gallery() {\r\n  const  { saleItems } = useUser()\r\n  return (\r\n    <>\r\n      <Header\r\n        title={<><span className=\"highlight\">MyWorld </span>Gallery</>}\r\n        subtitle={<>Browse <span className=\"highlight\">arts</span> in our gallery</>}\r\n      />\r\n      <SaleCollection saleItems={ saleItems } />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport MyArtList from '../components/MyArtList'\r\nimport Header from '../components/Header'\r\nimport { useUser } from '../providers/UserProvider'\r\n\r\nexport default function Collection() {\r\n  const { collection, createCollection, deleteCollection, useMyarts } = useUser()\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title={<>MyWorld <span className=\"highlight\">Collection</span></>}\r\n        subtitle={<>Here are your <span className=\"highlight\">Arts</span> collection</>}\r\n      />\r\n\r\n      {!collection ?\r\n        <div className=\"btn btn-bg rounded\" onClick={() => createCollection()}>Enable Collection</div> :\r\n        <>\r\n          <MyArtList myarts={useMyarts} />\r\n          <div className=\"btn btn-bg rounded\" onClick={() => deleteCollection()}>Delete Collection</div>\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport Header from '../components/Header'\r\n\r\nexport default function Artists() {\r\n  return (\r\n    <>\r\n      <Header\r\n        title={<><span className=\"highlight\">Artists</span> Profile</>}\r\n        subtitle={<>Our lens <span className=\"highlight\">through</span> life</>}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport { NAV_ROUTES } from '../config/routes.config'\r\nimport \"./Navbar.css\"\r\n\r\nexport default function Navbar() {\r\n  const [mobileMenu, setMobileMenu] = useState(false)\r\n  const history = useHistory()\r\n\r\n  const NavItem = ({ route }) => (\r\n    <div className=\"navbar__item\">\r\n      <div className=\"btn\" onClick={() => history.push(route.path)}>\r\n        {route.name}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className=\"navbar\">\r\n        {NAV_ROUTES.map(item => <NavItem route={item} key={item.path} />)}\r\n      </div>\r\n      <div className=\"btn btn-bg navbar__mobile__trigger mobile_only\" onClick={() => setMobileMenu(prev => !prev)}>Menu</div>\r\n      {mobileMenu &&\r\n        <div className=\"navbar__mobile\">\r\n          {NAV_ROUTES.map(item => <NavItem route={item} key={item.path} />)}\r\n        </div>\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport UserProvider from \"./UserProvider\"\r\nimport TxProvider from './TxProvider'\r\nimport AuthProvider from './AuthProvider'\r\n\r\nexport default function Providers({ children }) {\r\n  return (\r\n    <BrowserRouter>\r\n      <AuthProvider>\r\n        <TxProvider>\r\n          <UserProvider>\r\n              <div className=\"app\">\r\n                {children}\r\n              </div>\r\n          </UserProvider>\r\n        </TxProvider>\r\n      </AuthProvider>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      Not found\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nimport NotFound from '../pages/NotFound.page'\r\nexport default function Routes({ routes }) {\r\n  const renderRoutes = routes.map((route) => {\r\n    const { path, component } = route;\r\n    return <Route path={path} component={component} key={path} exact />\r\n  })\r\n\r\n  return (\r\n    <Switch>\r\n      {renderRoutes}\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useAuth } from '../providers/AuthProvider'\r\nimport { useUser } from '../providers/UserProvider'\r\nimport './AccountDetails.css'\r\n\r\nexport default function Wallet() {\r\n  const { user, logOut } = useAuth()\r\n  const { balance, createMyWVault } = useUser()\r\n\r\n  return (\r\n    <div className=\"wallet__popup\">\r\n      <div className=\"wallet__item\">\r\n        👛 {user?.addr}\r\n      </div>\r\n      {!balance ?\r\n        <div className=\"btn btn-small\" onClick={() => createMyWVault()}>\r\n          ⚠️ Enable MyW Token\r\n        </div>\r\n        :\r\n        <div className=\"wallet__item\">\r\n          💰 MyW: {balance.slice(0, -6)} <a style={{ color: \"white\" }} href=\"https://youtu.be/q8vcEGe95js\">(Get Tokens)</a>\r\n        </div>\r\n      }\r\n      <div className=\"btn btn-small\" onClick={() => logOut()}>👋 Logout</div>\r\n      {/* <div onClick={() => testScript()} className=\"btn btn-small\">Test Script</div> */}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport Navbar from './components/Navbar'\r\nimport Providers from './providers/Providers.comp';\r\nimport Routes from './components/Routes.comp'\r\nimport { ROUTES } from './config/routes.config';\r\nimport Wallet from './components/AccountDetails';\r\n// import Footer from './components/Footer';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n    <Providers>\r\n      <Wallet />\r\n      <Navbar />\r\n\r\n      <Routes routes={ROUTES} />\r\n    </Providers>\r\n    {/* <Footer /> */}\r\n    </>\r\n  )\r\n}\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './config/config'\r\nimport './index.css';\r\nimport './components/Atoms.css'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}